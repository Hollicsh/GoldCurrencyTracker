name: Publish 'Gold & Currency Tracker'

on:
  workflow_dispatch:
    inputs:
      versionTag:
        description: 'Release-Version (v15 oder v15-alpha.1)'
        required: true
      releaseType:
            description: 'Art des Releases'
            required: true
            default: 'release'
            type: choice
            options:
              - release
              - alpha
      buildRetail:
        description: 'Retail-Version bauen?'
        required: false
        default: true
        type: boolean

permissions:
  contents: write

jobs:
  create-changelog:
    name: Create Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generiere Changelog-Ausschnitt mit Versionskopf
        run: |
          version="${{ github.event.inputs.versionTag }}"
          date=$(date -u +"%Y-%m-%d")

          echo "**${version} (${date})**" > tmp_changelog.md

          awk '
            /^### \[.*\]/ { if (in_section) exit; in_section = 1; next }
            in_section && /^### \[/ { exit }
            in_section && /^\-/ { print }
          ' CHANGELOG.md >> tmp_changelog.md

      - name: Füge neuen Block an FULL-CHANGELOG.md an
        run: |
            touch FULL-CHANGELOG.md
            cat tmp_changelog.md FULL-CHANGELOG.md > FULL-CHANGELOG.new.md
            mv FULL-CHANGELOG.new.md FULL-CHANGELOG.md

      - name: Commit FULL-CHANGELOG.md
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add FULL-CHANGELOG.md
          git commit -m "Update FULL-CHANGELOG.md für ${{ github.event.inputs.versionTag }}"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
            
  build-github:
    name: Build Github
    needs: create-changelog
    runs-on: ubuntu-latest
    env:
        GITHUB_OAUTH: ${{ secrets.G_TOKEN }}  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag ${{ github.event.inputs.versionTag }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} refs/tags/${{ github.event.inputs.versionTag }}

      - name: Package and publish for Github (Alpha)
        if: github.event.inputs.releaseType == 'alpha' 
        uses: BigWigsMods/packager@v2

      - name: Package and publish for Github (Release)
        if: github.event.inputs.releaseType != 'alpha' 
        uses: BigWigsMods/packager@v2

  build-retail:
    if: github.event.inputs.buildRetail == 'true'
    name: Build Retail
    needs: build-github
    runs-on: ubuntu-latest
    env:
        CF_API_KEY: ${{ secrets.CF_API_KEY }}
        WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Package and publish for CourseForge and Wago (Alpha)
        if: github.event.inputs.releaseType == 'alpha'    
        uses: BigWigsMods/packager@v2
        with:
          args: -p 1241700 -a EGPXP3G1

      - name: Package and publish for CourseForge and Wago (Release)
        if: github.event.inputs.releaseType != 'alpha'  
        uses: BigWigsMods/packager@v2
        with:
          args: -p 1241700 -a EGPXP3G1

