name: Publish 'Gold & Currency Tracker'

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Art des Releases'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - alpha
      versionTag:
        description: 'Optional: manueller Tag'
        required: false
      buildRetail:
        description: 'Retail-Version'
        required: false
        default: true
        type: boolean

permissions:
  contents: write

jobs:
  define-new-tag:
    name: Define new tag
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.get-old.outputs.old_tag }}
      new_tag: ${{ steps.set-tag.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get old tag
        id: get-old
        run: |
          git fetch --tags
          old=$(git tag --sort=-creatordate | grep '^v[0-9]\+$' | head -n 1 || echo "v0")
          echo "old_tag=$old" >> $GITHUB_OUTPUT

      - name: Get last tag
        id: get-last
        run: |
          git fetch --tags
          last=$(git tag --sort=-creatordate | grep '^v[0-9]' | head -n 1 || echo "v0")
          echo "last_tag=$last" >> $GITHUB_OUTPUT

      - name: Set new tag
        id: set-tag
        run: |
          input="${{ github.event.inputs.versionTag }}"
          type="${{ github.event.inputs.releaseType }}"
          last="${{ steps.get-last.outputs.last_tag }}"

          if [[ -n "$input" ]]; then
            echo "Benutzerdefinierter Tag: $input"
            echo "new_tag=$input" >> $GITHUB_OUTPUT
            exit 0
          fi

          base=${last%%-*}
          suffix=${last#"$base"}
          base_num=${base#"v"}

          if [[ "$suffix" =~ ^-alpha\.[0-9]+$ ]]; then
            alpha_num=$(echo "$suffix" | cut -d. -f2)
          fi

          if [[ "$suffix" =~ ^-alpha\.[0-9]+$ && "$type" == "alpha" ]]; then
            next_alpha=$((alpha_num + 1))
            newtag="v${base_num}-alpha.${next_alpha}"
          elif [[ "$suffix" =~ ^-alpha\.[0-9]+$ && "$type" == "release" ]]; then
            newtag="v${base_num}"
          elif [[ -z "$suffix" && "$type" == "release" ]]; then
            next_base=$((base_num + 1))
            newtag="v${next_base}"
          elif [[ -z "$suffix" && "$type" == "alpha" ]]; then
            next_base=$((base_num + 1))
            newtag="v${next_base}-alpha.1"
          else
            exit 1
          fi

          echo "new_tag=$newtag" >> $GITHUB_OUTPUT

  create-changelog:
    name: Create Changelog
    needs: define-new-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Replace @old-project-version@ in CHANGELOG.md
        run: |
          old_tag=$(git tag --sort=-creatordate | grep '^v[0-9]\+$' | head -n 1 || echo "v0")
          sed -i "s/@old-project-version@/$old_tag/g" CHANGELOG.md

      - name: Generate changelog section with version header
        run: |
          version="${{ needs.define-new-tag.outputs.new_tag }}"
          date=$(date -u +"%Y-%m-%d")

          echo "**${version} (${date})**" > tmp_changelog.md

          awk '
            /^### \[.*\]/ { if (in_section) exit; in_section = 1; next }
            in_section && /^### \[/ { exit }
            in_section && /^\-/ { print }
          ' CHANGELOG.md >> tmp_changelog.md

          echo "" >> tmp_changelog.md

      - name: Add new block to FULL-CHANGELOG.md
        run: |
            touch FULL-CHANGELOG.md
            cat tmp_changelog.md FULL-CHANGELOG.md > FULL-CHANGELOG.new.md
            mv FULL-CHANGELOG.new.md FULL-CHANGELOG.md

      - name: Commit FULL-CHANGELOG.md
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add FULL-CHANGELOG.md
          git commit -m "Update FULL-CHANGELOG.md for ${{ needs.define-new-tag.outputs.new_tag }}"
          git push https://x-access-token:${{ secrets.G_TOKEN }}@github.com/${{ github.repository }} HEAD:main

  build-github:
    name: Build Github
    needs: 
      - create-changelog
      - define-new-tag
    runs-on: ubuntu-latest
    env:
        GITHUB_OAUTH: ${{ secrets.G_TOKEN }}  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag ${{ needs.define-new-tag.outputs.new_tag }}
          git push https://x-access-token:${{ secrets.G_TOKEN }}@github.com/${{ github.repository }} refs/tags/${{ needs.define-new-tag.outputs.new_tag }}

      - name: Replace @old-project-version@ in CHANGELOG.md
        run: |
          old_tag=${{ needs.define-new-tag.outputs.old_tag }}
          sed -i "s/@old-project-version@/$old_tag/g" CHANGELOG.md

      - name: Package and publish for Github (Alpha)
        if: github.event.inputs.releaseType == 'alpha' 
        uses: BigWigsMods/packager@v2

      - name: Package and publish for Github (Release)
        if: github.event.inputs.releaseType != 'alpha' 
        uses: BigWigsMods/packager@v2

  build-retail:
    if: github.event.inputs.buildRetail == 'true'
    name: Build Retail
    needs: 
      - build-github
      - define-new-tag
    runs-on: ubuntu-latest
    env:
        CF_API_KEY: ${{ secrets.CF_API_KEY }}
        WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Replace @old-project-version@ in CHANGELOG.md
        run: |
          old_tag=${{ needs.define-new-tag.outputs.old_tag }}
          sed -i "s/@old-project-version@/$old_tag/g" CHANGELOG.md

      - name: Get current tags
        run: |
          git fetch --tags

      - name: Package and publish for CourseForge and Wago (Alpha)
        if: github.event.inputs.releaseType == 'alpha'    
        uses: BigWigsMods/packager@v2
        with:
          args: -p 1241700 -a EGPXP3G1

      - name: Package and publish for CourseForge and Wago (Release)
        if: github.event.inputs.releaseType != 'alpha'  
        uses: BigWigsMods/packager@v2
        with:
          args: -p 1241700 -a EGPXP3G1

